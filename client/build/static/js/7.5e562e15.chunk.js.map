{"version":3,"sources":["components/header/header.component.jsx","components/controller/controller.component.jsx","components/featured/featured.component.jsx","pages/home-page/home-page.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/featured-container/featured-container.component.jsx"],"names":["Header","handleBackgroundItem","backgroundItem","props","itemType","moviesNowPlaying","moviesGenre","TVOnTheAir","TVGenre","slice","forEach","item","genre_ids","filter","x","id","map","name","this","fetchMoviesGenreStartAsync","fetchTVGenreStartAsync","className","naturalSlideWidth","naturalSlideHeight","totalSlides","length","isPlaying","infinite","i","index","key","to","toLowerCase","minDeviceWidth","alt","src","backdrop_path","poster_path","maxDeviceWidth","title","vote_average","React","Component","connect","state","user","ismoviesNowPlayingFetching","movie","ismoviesGenreFetching","isTVOnTheAirFetching","tv","isTVGenreFetching","dispatch","Controller","handleMovieFetch","fetchMoviesUpcomingStartAsync","fetchMoviesPopularStartAsync","fetchMoviesNowPlayingStartAsync","fetchMoviesTopRatedStartAsync","handleTVFetch","fetchTVAiringTodayStartAsync","fetchTVPopularStartAsync","fetchTVOnTheAirStartAsync","fetchTVTopRatedStartAsync","setItemType","onClick","Featured","featuredContent","moviesUpcoming","moviesPopular","moviesTopRated","TVAiringToday","TVPopular","TVTopRated","contentType","ismoviesUpcomingFetching","ismoviesPopularFetching","ismoviesTopRatedFetching","isTVAiringTodayFetching","isTVPopularFetching","isTVTopRatedFetching","HomePage","_objectWithoutProperties","source","excluded","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","FeaturedContainer","mediaBig","useMediaQuery","mediaLarge","mediaMedium","mediaSmall","slides","height","visibleSlides","otherProps"],"mappings":"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","file":"static/js/7.5e562e15.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MediaQuery from 'react-responsive';\r\n\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport { CarouselProvider, Slider, Slide } from 'pure-react-carousel';\r\n\r\nimport { fetchMoviesGenreStartAsync } from '../../redux/movie/movie.actions';\r\nimport { fetchTVGenreStartAsync } from '../../redux/tv/tv.actions';\r\n\r\nimport './header.styles.scss';\r\n\r\nclass Header extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchMoviesGenreStartAsync, fetchTVGenreStartAsync } = this.props;\r\n\r\n    fetchMoviesGenreStartAsync();\r\n    fetchTVGenreStartAsync();\r\n  }\r\n\r\n  handleBackgroundItem = () => {\r\n    const {\r\n      itemType,\r\n      moviesNowPlaying,\r\n      moviesGenre,\r\n      TVOnTheAir,\r\n      TVGenre,\r\n    } = this.props;\r\n\r\n    let backgroundItem;\r\n\r\n    if (itemType === 'movie') {\r\n      backgroundItem = moviesNowPlaying.slice(0, 3) || [];\r\n\r\n      if (backgroundItem && moviesGenre) {\r\n        backgroundItem.forEach((item) => {\r\n          item.genre_ids = moviesGenre\r\n            .filter((x) => x.id === item.genre_ids[0])\r\n            .map((x) => x.name);\r\n        });\r\n      }\r\n      // console.log(backgroundItem);\r\n    }\r\n\r\n    if (itemType === 'tv') {\r\n      backgroundItem = TVOnTheAir.slice(0, 3) || [];\r\n\r\n      if (backgroundItem && TVGenre) {\r\n        backgroundItem.forEach((item) => {\r\n          item.genre_ids = TVGenre.filter(\r\n            (x) => x.id === item.genre_ids[0]\r\n          ).map((x) => x.name);\r\n        });\r\n      }\r\n      // console.log(backgroundItem);\r\n    }\r\n\r\n    return backgroundItem;\r\n  };\r\n\r\n  // handleImageSize = () => {\r\n  //   const mediaLarge = useMediaQuery({ maxDeviceWidth: 1300 });\r\n  //   const MediaMedium = useMediaQuery({ maxDeviceWidth: 800 });\r\n  //   const mediaSmall = useMediaQuery({ maxDeviceWidth: 500 });\r\n\r\n  //   const imageSize = mediaLarge\r\n  //     ? 'w1280'\r\n  //     : MediaMedium\r\n  //     ? 'w780'\r\n  //     : mediaSmall\r\n  //     ? 'w300'\r\n  //     : 'original';\r\n\r\n  //   return imageSize;\r\n  // };\r\n\r\n  render() {\r\n    const backgroundItem = this.handleBackgroundItem();\r\n    const { itemType } = this.props;\r\n\r\n    return (\r\n      <CarouselProvider\r\n        className='header'\r\n        naturalSlideWidth={100}\r\n        naturalSlideHeight={50}\r\n        totalSlides={backgroundItem.length}\r\n        isPlaying={true}\r\n        infinite={true}\r\n        // isIntrinsicHeight={true}\r\n      >\r\n        <Slider>\r\n          {backgroundItem.map((item, i) => {\r\n            return (\r\n              <Slide index={i} key={i}>\r\n                <Link\r\n                  key={item.id}\r\n                  to={`/details/${itemType.toLowerCase()}/${item.id}`}\r\n                  className='header__image-container'\r\n                >\r\n                  <MediaQuery minDeviceWidth={1301}>\r\n                    <img\r\n                      className='header__image-container--image'\r\n                      alt='Header Background'\r\n                      src={`https://image.tmdb.org/t/p/w1280${\r\n                        item.backdrop_path || item.poster_path\r\n                      }`}\r\n                    />\r\n                  </MediaQuery>\r\n                  <MediaQuery maxDeviceWidth={1300}>\r\n                    <img\r\n                      className='header__image-container--image'\r\n                      alt='Header Background'\r\n                      src={`https://image.tmdb.org/t/p/w780${\r\n                        item.backdrop_path || item.poster_path\r\n                      }`}\r\n                    />\r\n                  </MediaQuery>\r\n                  {/* <MediaQuery maxDeviceWidth={800}>\r\n                    <img\r\n                      className='header__image-container--image'\r\n                      alt='Header Background'\r\n                      src={`https://image.tmdb.org/t/p/w780${\r\n                        item.backdrop_path || item.poster_path\r\n                      }`}\r\n                    />\r\n                  </MediaQuery> */}\r\n                  {/* <MediaQuery maxDeviceWidth={500}>\r\n                    <img\r\n                      className='header__image-container--image'\r\n                      alt='Header Background'\r\n                      src={`https://image.tmdb.org/t/p/w300${\r\n                        item.backdrop_path || item.poster_path\r\n                      }`}\r\n                    />\r\n                  </MediaQuery> */}\r\n                  <div className='header__text'>\r\n                    <span className='header__text--type'>Playing now</span>\r\n                    <span className='header__text--title'>\r\n                      {item.title || item.name}\r\n                    </span>\r\n                    <span className='header__text--subtitle'>\r\n                      {item.genre_ids || 'Generic'} | {item.vote_average * 10}%\r\n                      Rating\r\n                    </span>\r\n                  </div>\r\n                </Link>\r\n              </Slide>\r\n            );\r\n          })}\r\n        </Slider>\r\n      </CarouselProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  itemType: state.user.itemType,\r\n\r\n  ismoviesNowPlayingFetching: state.movie.ismoviesNowPlayingFetching,\r\n  moviesNowPlaying: state.movie.moviesNowPlaying,\r\n  moviesGenre: state.movie.moviesGenre,\r\n  ismoviesGenreFetching: state.movie.ismoviesGenreFetching,\r\n\r\n  isTVOnTheAirFetching: state.tv.isTVOnTheAirFetching,\r\n  TVOnTheAir: state.tv.TVOnTheAir,\r\n  TVGenre: state.tv.TVGenre,\r\n  isTVGenreFetching: state.tv.isTVGenreFetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchMoviesGenreStartAsync: () => dispatch(fetchMoviesGenreStartAsync()),\r\n  fetchTVGenreStartAsync: () => dispatch(fetchTVGenreStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setItemType } from '../../redux/user/user.actions';\r\n\r\nimport {\r\n  fetchMoviesUpcomingStartAsync,\r\n  fetchMoviesPopularStartAsync,\r\n  fetchMoviesNowPlayingStartAsync,\r\n  fetchMoviesTopRatedStartAsync,\r\n} from '../../redux/movie/movie.actions';\r\n\r\nimport {\r\n  fetchTVAiringTodayStartAsync,\r\n  fetchTVPopularStartAsync,\r\n  fetchTVOnTheAirStartAsync,\r\n  fetchTVTopRatedStartAsync,\r\n} from '../../redux/tv/tv.actions';\r\n\r\nimport './controller.styles.scss';\r\n\r\nclass Controller extends React.Component {\r\n  handleMovieFetch = () => {\r\n    const {\r\n      fetchMoviesUpcomingStartAsync,\r\n      fetchMoviesPopularStartAsync,\r\n      fetchMoviesNowPlayingStartAsync,\r\n      fetchMoviesTopRatedStartAsync,\r\n    } = this.props;\r\n\r\n    fetchMoviesUpcomingStartAsync();\r\n    fetchMoviesPopularStartAsync();\r\n    fetchMoviesNowPlayingStartAsync();\r\n    fetchMoviesTopRatedStartAsync();\r\n  };\r\n\r\n  handleTVFetch = () => {\r\n    const {\r\n      fetchTVAiringTodayStartAsync,\r\n      fetchTVPopularStartAsync,\r\n      fetchTVOnTheAirStartAsync,\r\n      fetchTVTopRatedStartAsync,\r\n    } = this.props;\r\n\r\n    fetchTVAiringTodayStartAsync();\r\n    fetchTVPopularStartAsync();\r\n    fetchTVOnTheAirStartAsync();\r\n    fetchTVTopRatedStartAsync();\r\n  };\r\n\r\n  render() {\r\n    const { itemType, setItemType } = this.props;\r\n    return (\r\n      <div className='controller'>\r\n        <button\r\n          className={`controller__btn controller__movies ${\r\n            itemType === 'movie' ? 'controller__btn--selected' : null\r\n          }`}\r\n          onClick={() => {\r\n            setItemType('movie');\r\n            this.handleMovieFetch();\r\n          }}\r\n        >\r\n          Movies\r\n        </button>\r\n        <button\r\n          className={`controller__btn controller__shows ${\r\n            itemType === 'tv' ? 'controller__btn--selected' : null\r\n          }`}\r\n          onClick={() => {\r\n            setItemType('tv');\r\n            this.handleTVFetch();\r\n          }}\r\n        >\r\n          TV Shows\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  itemType: state.user.itemType,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setItemType: (itemType) => dispatch(setItemType(itemType)),\r\n\r\n  fetchMoviesUpcomingStartAsync: () =>\r\n    dispatch(fetchMoviesUpcomingStartAsync()),\r\n  fetchMoviesPopularStartAsync: () => dispatch(fetchMoviesPopularStartAsync()),\r\n  fetchMoviesNowPlayingStartAsync: () =>\r\n    dispatch(fetchMoviesNowPlayingStartAsync()),\r\n  fetchMoviesTopRatedStartAsync: () =>\r\n    dispatch(fetchMoviesTopRatedStartAsync()),\r\n\r\n  fetchTVAiringTodayStartAsync: () => dispatch(fetchTVAiringTodayStartAsync()),\r\n  fetchTVPopularStartAsync: () => dispatch(fetchTVPopularStartAsync()),\r\n  fetchTVOnTheAirStartAsync: () => dispatch(fetchTVOnTheAirStartAsync()),\r\n  fetchTVTopRatedStartAsync: () => dispatch(fetchTVTopRatedStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Controller);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FeaturedContainer from '../featured-container/featured-container.component';\r\n\r\nimport {\r\n  fetchMoviesUpcomingStartAsync,\r\n  fetchMoviesPopularStartAsync,\r\n  fetchMoviesNowPlayingStartAsync,\r\n  fetchMoviesTopRatedStartAsync,\r\n} from '../../redux/movie/movie.actions';\r\n\r\nimport {\r\n  fetchTVAiringTodayStartAsync,\r\n  fetchTVPopularStartAsync,\r\n  fetchTVOnTheAirStartAsync,\r\n  fetchTVTopRatedStartAsync,\r\n} from '../../redux/tv/tv.actions';\r\n\r\nimport './featured.styles.scss';\r\n\r\nclass Featured extends React.Component {\r\n  componentDidMount() {\r\n    const { itemType } = this.props;\r\n    if (itemType === 'movie') this.handleMovieFetch();\r\n    if (itemType === 'tv') this.handleTVFetch();\r\n  }\r\n\r\n  handleMovieFetch = () => {\r\n    const {\r\n      fetchMoviesUpcomingStartAsync,\r\n      fetchMoviesPopularStartAsync,\r\n      fetchMoviesNowPlayingStartAsync,\r\n      fetchMoviesTopRatedStartAsync,\r\n    } = this.props;\r\n\r\n    fetchMoviesUpcomingStartAsync();\r\n    fetchMoviesPopularStartAsync();\r\n    fetchMoviesNowPlayingStartAsync();\r\n    fetchMoviesTopRatedStartAsync();\r\n  };\r\n\r\n  handleTVFetch = () => {\r\n    const {\r\n      fetchTVAiringTodayStartAsync,\r\n      fetchTVPopularStartAsync,\r\n      fetchTVOnTheAirStartAsync,\r\n      fetchTVTopRatedStartAsync,\r\n    } = this.props;\r\n\r\n    fetchTVAiringTodayStartAsync();\r\n    fetchTVPopularStartAsync();\r\n    fetchTVOnTheAirStartAsync();\r\n    fetchTVTopRatedStartAsync();\r\n  };\r\n\r\n  render() {\r\n    const { itemType } = this.props;\r\n\r\n    const {\r\n      moviesUpcoming,\r\n      moviesPopular,\r\n      moviesNowPlaying,\r\n      moviesTopRated,\r\n\r\n      TVAiringToday,\r\n      TVPopular,\r\n      TVOnTheAir,\r\n      TVTopRated,\r\n    } = this.props;\r\n\r\n    let featuredContent;\r\n    if (itemType === 'movie') {\r\n      featuredContent = (\r\n        <div>\r\n          <FeaturedContainer title='Upcoming' contentType={moviesUpcoming} />\r\n          <FeaturedContainer title='Popular' contentType={moviesPopular} />\r\n          <FeaturedContainer\r\n            title='Now Playing'\r\n            contentType={moviesNowPlaying}\r\n          />\r\n          <FeaturedContainer title='Top Rated' contentType={moviesTopRated} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (itemType === 'tv') {\r\n      featuredContent = (\r\n        <div>\r\n          <FeaturedContainer title='Airing Today' contentType={TVAiringToday} />\r\n          <FeaturedContainer title='Popular' contentType={TVPopular} />\r\n          <FeaturedContainer title='On The Air' contentType={TVOnTheAir} />\r\n          <FeaturedContainer title='Top Rated' contentType={TVTopRated} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div className='featured'>{featuredContent}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  itemType: state.user.itemType,\r\n\r\n  ismoviesUpcomingFetching: state.movie.ismoviesUpcomingFetching,\r\n  moviesUpcoming: state.movie.moviesUpcoming,\r\n  ismoviesPopularFetching: state.movie.ismoviesPopularFetching,\r\n  moviesPopular: state.movie.moviesPopular,\r\n  ismoviesNowPlayingFetching: state.movie.ismoviesNowPlayingFetching,\r\n  moviesNowPlaying: state.movie.moviesNowPlaying,\r\n  ismoviesTopRatedFetching: state.movie.ismoviesTopRatedFetching,\r\n  moviesTopRated: state.movie.moviesTopRated,\r\n\r\n  isTVAiringTodayFetching: state.tv.isTVAiringTodayFetching,\r\n  TVAiringToday: state.tv.TVAiringToday,\r\n  isTVPopularFetching: state.tv.isTVPopularFetching,\r\n  TVPopular: state.tv.TVPopular,\r\n  isTVOnTheAirFetching: state.tv.isTVOnTheAirFetching,\r\n  TVOnTheAir: state.tv.TVOnTheAir,\r\n  isTVTopRatedFetching: state.tv.isTVTopRatedFetching,\r\n  TVTopRated: state.tv.TVTopRated,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchMoviesUpcomingStartAsync: () =>\r\n    dispatch(fetchMoviesUpcomingStartAsync()),\r\n  fetchMoviesPopularStartAsync: () => dispatch(fetchMoviesPopularStartAsync()),\r\n  fetchMoviesNowPlayingStartAsync: () =>\r\n    dispatch(fetchMoviesNowPlayingStartAsync()),\r\n  fetchMoviesTopRatedStartAsync: () =>\r\n    dispatch(fetchMoviesTopRatedStartAsync()),\r\n\r\n  fetchTVAiringTodayStartAsync: () => dispatch(fetchTVAiringTodayStartAsync()),\r\n  fetchTVPopularStartAsync: () => dispatch(fetchTVPopularStartAsync()),\r\n  fetchTVOnTheAirStartAsync: () => dispatch(fetchTVOnTheAirStartAsync()),\r\n  fetchTVTopRatedStartAsync: () => dispatch(fetchTVTopRatedStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Featured);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// import { fetchMoviesUpcomingStartAsync } from '../redux/movie/movie.actions';\r\n\r\nimport Header from '../../components/header/header.component';\r\nimport Controller from '../../components/controller/controller.component';\r\nimport Featured from '../../components/featured/featured.component';\r\n\r\nimport './home-page.styles.scss';\r\n\r\nclass HomePage extends React.Component {\r\n  componentDidMount() {\r\n    // const { fetchMoviesUpcomingStartAsync } = this.props;\r\n    // fetchMoviesUpcomingStartAsync();\r\n    // console.log(this.props);\r\n  }\r\n\r\n  render() {\r\n    // throw Error;\r\n\r\n    return (\r\n      <div className='homepage'>\r\n        <Header />\r\n        <Controller />\r\n        <Featured />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // isMoviesUpcomingFetching:\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // fetchMoviesUpcomingStartAsync: () =>\r\n  //   dispatch(fetchMoviesUpcomingStartAsync()),\r\n  // getMoviesUpcoming: (url) => dispatch(getMoviesUpcoming(url)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\n\r\nimport FeaturedItem from '../featured-item/featured-item.component';\r\n\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport {\r\n  CarouselProvider,\r\n  Slider,\r\n  Slide,\r\n  ButtonBack,\r\n  ButtonNext,\r\n} from 'pure-react-carousel';\r\n\r\nimport './featured-container.styles.scss';\r\n\r\nconst FeaturedContainer = ({ title, contentType }) => {\r\n  const mediaBig = useMediaQuery({ maxDeviceWidth: 1110 });\r\n  const mediaLarge = useMediaQuery({ maxDeviceWidth: 950 });\r\n  const mediaMedium = useMediaQuery({ maxDeviceWidth: 800 });\r\n  const mediaSmall = useMediaQuery({ maxDeviceWidth: 650 });\r\n  const mediaPhone = useMediaQuery({ maxDeviceWidth: 500 });\r\n\r\n  let slides = mediaPhone\r\n    ? 2\r\n    : mediaMedium\r\n    ? 3\r\n    : mediaLarge\r\n    ? 4\r\n    : mediaBig\r\n    ? 5\r\n    : 6;\r\n\r\n  let height = mediaSmall\r\n    ? 210\r\n    : mediaMedium\r\n    ? 150\r\n    : mediaLarge\r\n    ? 160\r\n    : mediaBig\r\n    ? 170\r\n    : 210;\r\n\r\n  // console.log(contentType);\r\n\r\n  return contentType.length ? (\r\n    <CarouselProvider\r\n      naturalSlideWidth={146}\r\n      naturalSlideHeight={height}\r\n      totalSlides={contentType.length}\r\n      visibleSlides={slides}\r\n      className='featured__container'\r\n    >\r\n      <div className='featured__container--header'>\r\n        <h2 className='featured__container--header--title'>{title}</h2>\r\n        <div className='featured__container--header--arrows'>\r\n          <ButtonBack className='featured__container--header--arrows--prev'>\r\n            &#10094;\r\n          </ButtonBack>\r\n          <ButtonNext className='featured__container--header--arrows--next'>\r\n            &#10095;\r\n          </ButtonNext>\r\n        </div>\r\n      </div>\r\n      <Slider className='featured__container--content'>\r\n        {contentType.map(({ id, ...otherProps }, i) => (\r\n          <Slide\r\n            index={i}\r\n            key={id}\r\n            className='featured__container--content--slide'\r\n          >\r\n            <FeaturedItem id={id} {...otherProps} />\r\n          </Slide>\r\n        ))}\r\n      </Slider>\r\n    </CarouselProvider>\r\n  ) : (\r\n    <div className='featured__container'>\r\n      <div className='featured__container--header'>\r\n        <h2 className='featured__container--header--title'>{title}</h2>\r\n      </div>\r\n      <div className='featured__container--placeholder'>\r\n        There are no{' '}\r\n        <span className='featured__container--placeholder--span'>\r\n          {title.toLowerCase()}\r\n        </span>{' '}\r\n        items to be found!\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeaturedContainer;\r\n"],"sourceRoot":""}